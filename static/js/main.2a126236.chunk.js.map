{"version":3,"sources":["components/login/login.js","components/accounts/accounts.js","data/jsonData.js","components/transactions/transactions.js","components/home/home.js","App.js","reportWebVitals.js","index.js"],"names":["Login","onSumit","useState","user","setUser","pass","setPass","className","type","name","placeholder","value","onChange","e","target","onClick","Accounts","accounts","setSelectedAcc","accountsArr","map","acc","accNo","accName","accType","balance","currency","id","accountsData","transactionData","transactions","date","amount","Transactions","props","SetTransaction","temp","filter","trns","console","log","useEffect","transaction","Home","accountList","isTransactios","SetIsTransactios","selectedAcc","SetSelectedAcc","showTransactios","account","App","isLoggedin","setIsLoggedin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a126236.chunk.js","sourcesContent":["import { useState } from 'react'\n\nconst Login = ({ onSumit }) => {\n   const [user, setUser] = useState('')\n   const [pass, setPass] = useState('')\n\n   const onLogin = () => {\n      onSumit({ user, pass })\n      setUser('')\n      setPass('')\n   }\n\n   return (\n      <div data-testid='login-1' className='container'>\n         <form>\n            <h3 className='center-align'>Login</h3>\n            <input\n               className='input'\n               type='text'\n               data-testid='login-username'\n               name='userName'\n               placeholder='Username'\n               value={user}\n               onChange={(e) => setUser(e.target.value)}\n            ></input>\n            <input\n               className='input'\n               type='password'\n               data-testid='login-password'\n               name='password'\n               placeholder='Password'\n               value={pass}\n               onChange={(e) => setPass(e.target.value)}\n            ></input>\n            <button data-testid='login-button' className='input btn-login' onClick={onLogin}>\n               Login\n            </button>\n         </form>\n      </div>\n   )\n}\n\nexport default Login\n","import { useState } from 'react'\n\nconst Accounts = ({ accounts, setSelectedAcc }) => {\n   const [accountsArr] = useState(accounts)\n\n   const showTransactios = (account) => {\n      setSelectedAcc(account)\n   }\n   return (\n      <div data-testid='accounts-table' className=''>\n         <table className='row table'>\n            <thead>\n               <tr>\n                  <td>Account Number</td>\n                  <td>Account Name</td>\n                  <td>Type</td>\n                  <td>Balance</td>\n                  <td>Currency</td>\n               </tr>\n            </thead>\n            <tbody>\n               {accountsArr.map((acc) => (\n                  <tr key={acc.id} onClick={() => showTransactios(acc)}>\n                     <td>{acc.accNo}</td>\n                     <td>{acc.accName}</td>\n                     <td>{acc.accType}</td>\n                     <td>{acc.balance}</td>\n                     <td>{acc.currency}</td>\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n      </div>\n   )\n}\n\nexport default Accounts\n","export const accountsData = {\n    accounts : [{\n        id: 1,\n        accNo: '001',\n        accName: 'Saving Account',\n        accType: 'Saving',\n        balance: '1132',\n        currency: 'AUD'\n      },\n      {\n        id: 2,\n        accNo: '002',\n        accName: 'Bonus Saving Account',\n        accType: 'Saving',\n        balance: '432',\n        currency: 'GBP'\n      },\n      {\n        id: 3,\n        accNo: '003',\n        accName: 'Current Account',\n        accType: 'Current',\n        balance: '1232',\n        currency: 'AUD'\n      }\n    ]\n}\n\nexport const transactionData = {\n    transactions : [{\n        id: 1,\n        accNo: '001',\n        accName: 'Saving Account',\n        date: '2021-10-10',\n        amount: '1200'\n      },\n      {\n        id: 2,\n        accNo: '001',\n        accName: 'Saving Account',\n        date: '2021-11-01',\n        amount: '1500'\n      },\n      {\n        id: 3,\n        accNo: '002',\n        accName: 'Bonus Saving Account',\n        date: '2021-07-12',\n        amount: '1500'\n      },\n      {\n        id: 4,\n        accNo: '002',\n        accName: 'Bonus Saving Account',\n        date: '2021-10-11',\n        amount: '1500'\n      },\n      {\n        id: 5,\n        accNo: '003',\n        accName: 'Current Account',\n        date: '2021-11-02',\n        amount: '1500'\n      },\n    ]\n}","import { useState, useEffect } from 'react'\nimport { transactionData } from '../../data/jsonData.js'\n\nconst Transactions = (props) => {\n   const [transactions, SetTransaction] = useState([])\n\n   const temp = transactionData.transactions.filter((trns) => trns.accNo === props.acc.accNo)\n   console.log('transaction ', temp)\n   useEffect(() => {\n      SetTransaction(temp)\n   }, temp)\n\n   return (\n      <div data-testid='transaction-table' className=''>\n         <table className='row table'>\n            <thead>\n               <tr>\n                  <td>Transaction Id</td>\n                  <td>Account Id</td>\n                  <td>From Account</td>\n                  <td>Transaction Data</td>\n                  <td>Amount</td>\n               </tr>\n            </thead>\n            <tbody>\n               {transactions.map((transaction) => (\n                  <tr key={transaction.id}>\n                     <td>{transaction.id}</td>\n                     <td>{transaction.accNo}</td>\n                     <td>{transaction.accName}</td>\n                     <td>{transaction.date}</td>\n                     <td>{transaction.amount}</td>\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n      </div>\n   )\n}\n\nexport default Transactions\n","import { useState } from 'react'\nimport Accounts from '../accounts/accounts.js'\nimport Transactions from '../transactions/transactions'\nimport { accountsData } from '../../data/jsonData.js'\n\nconst Home = () => {\n   const [accountList] = useState(accountsData.accounts)\n   const [isTransactios, SetIsTransactios] = useState(false)\n   const [selectedAcc, SetSelectedAcc] = useState({})\n\n   const setSelectedAcc = (acc) => {\n      showTransactios(acc)\n   }\n   const showTransactios = (account) => {\n      SetSelectedAcc(account)\n      SetIsTransactios(true)\n   }\n\n   const backToAccountList = () => {\n      SetSelectedAcc({})\n      SetIsTransactios(false)\n   }\n\n   return (\n      <div className='container'>\n         <header data-testid='Header-1' className='row header'>\n            <h2>Simple Banking App</h2>\n         </header>\n         <div data-testid='breadcrumb-1' className='row bredcrumb'>\n            {!isTransactios ? (\n               <h3 data-testid='account-heading'>Account List</h3>\n            ) : (\n               <h3 data-testid='Transaction-heading'>\n                  <span className='bredcrumb_link' onClick={backToAccountList}>\n                     {selectedAcc.accName}\n                  </span>{' '}\n                  - Transactions List\n               </h3>\n            )}\n         </div>\n         {!isTransactios ? (\n            <Accounts\n               data-testid='accounts-list'\n               accounts={accountList}\n               setSelectedAcc={setSelectedAcc}\n            ></Accounts>\n         ) : (\n            <Transactions data-testid='transaction-list' acc={selectedAcc}></Transactions>\n         )}\n      </div>\n   )\n}\n\nexport default Home\n","import { useState } from \"react\";\nimport Login from \"./components/login/login.js\";\n\nimport Home from \"./components/home/home.js\";\nimport './App.css';\n\nfunction App() {\n  \n  const [isLoggedin, setIsLoggedin] = useState(false)\n  const onLogin = ({user, pass}) => {\n    if(user && user !== \"\" && pass && pass !== \"\") {\n      setIsLoggedin(true)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {\n        !isLoggedin \n        ? <Login onSumit={onLogin} />\n        : <Home></Home>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}